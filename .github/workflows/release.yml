name: Release Docker image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get all git tags
        run: git fetch --prune --unshallow --tags

      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'

      - name: Run tests
        run: make test

      - uses: sonarsource/sonarqube-scan-action@master
        if: github.repository_owner == 'jusbrasil'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - uses: sonarsource/sonarqube-quality-gate-action@master
        if: github.repository_owner == 'jusbrasil'
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  push:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    outputs:
      GITHUB_VERSION: ${{ env.VERSION }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Extract current version from VERSION
        run: echo "VERSION=$(cat VERSION | sed -e 's,.*/\(.*\),\1,;s/-snapshot$//')" >> $GITHUB_ENV

      - name: Build image
        run: make image REPO=${{GITHUB_REPOSITORY_OWNER}} VERSION=${{ env.VERSION }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push image to registry
        run: make publish REPO=${{GITHUB_REPOSITORY_OWNER}} VERSION=${{ env.VERSION }}

  github-release-bump-version:
    name: GitHub Release and Bump Version file
    runs-on: ubuntu-latest
    needs: push

    if: github.ref == 'refs/heads/master'

    env:
      GITHUB_VERSION: ${{ needs.push.outputs.GITHUB_VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ env.GITHUB_VERSION }}" \
            --title="${{ env.GITHUB_VERSION }}" \
            --repo="$GITHUB_REPOSITORY" \
            --target=master \
            --generate-notes

      - name: Set next snapshot version
        run: |
          IFS='.' read -r major minor patch <<< "${{ env.GITHUB_VERSION }}"

          new_version="${major}.${minor}.$((patch+1))-snapshot"
          echo $new_version > VERSION.tmp && mv VERSION.tmp VERSION

          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -am "chore: bump version to ${new_version}"
          git push origin master
